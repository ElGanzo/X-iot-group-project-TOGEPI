#this script generates two XIoT Scenario PSM views starting from a Feature Model PSM (with its Feature Operation Model PSM)
#"first view" is the model containing a view of the systems and devices in the Feature model.
#"second view" refers to the model containing devices with their operations/events and all their attributes

#obiettivo è creare psm della piattaforma giusta: pim viene creato solo per poter poi generare psm giusto
#TODO primo step: creare la vista (vuota) del nuovo modello: fatto
#TODO lo script carica un Feature Model System dal modello attivo e genera un X-IoT System con lo stesso nome e gli stessi attributi

GENERATE_SCENARIO

PROCEDURE global GENERATE_SCENARIO {
    CC "AdoScript" MLISTBOX entries:"ThingsBoard;Losant;Azure"
        toksep:";"
        title:"Select platform"
        oktext:"Generate"
        boxtext:"Select your desired platform"
        #extra:{CHECKBOX "Generate something else too additionally... (can be added)"}
    IF (endbutton = "ok") {
        # CC "AdoScript" INFOBOX (selection)
        CREATE_NEW_MODEL
    } ELSIF {
        EXIT
    }

    #TODO implement: if selection is not azure, other scripts get executed instead
    # some global procedure call here

    #(todo implement)
    #set active model a_dstmodel
    #call procedure pim to psm
}

PROCEDURE global CREATE_NEW_MODEL {
    SETG x:(2cm)
    SETG y:(2cm)

    CC "CoreUI" MODEL_SELECT_BOX without-models mgroup-sel title:"Select a target modelgroup"
    IF (endbutton != "ok") {
        SETL targetID:-1
        EXIT
    }
    CC "Core" GET_MODEL_BASENAME modelid:(modelid)
    SETG a_dstmodelid:0
    SETL ecode:1
    WHILE (ecode != 0) {
    CC "AdoScript" EDITFIELD title:("Insert new model name..." + basename) caption:("~Modelname:")
    IF (ecode != 0) {
        SETL targetID:-1
        EXIT
    }
    CC "Core" CREATE_MODEL modeltype:("IoT Scenario") modelname:(text) version:"" mgroups:(mgroupids)
    IF (ecode = 0) {
        SET a_dstmodelid:(modelid)
    } ELSIF (ecode = 40) {
        CC "AdoScript" ERRORBOX ("A model with the same name already exists!") ok
    } ELSE {
        CC "AdoScript" ERRORBOX ("An error occured creating the new model: " + STR errtext) ok
    }
    #questo script genera un PIM. poi con script già esistenti viene fatto il PSM.
    CC "Core" SET_ATTR_VAL objid:(a_dstmodelid) attrname:"Model Type" val:("PIM")

    GENERATE_SYSTEMS
    }

}

PROCEDURE global GENERATE_SYSTEMS {
    #faccio mappa almeno posso (se serve) aggiungere le tabelle
    SETG featureobjs:(map())
    SETG deviceobjs:(map())
    CC "Core" GET_CLASS_ID classname:"system"
    SETG systemclassid:(classid)
    CC "Core" GET_CLASS_ID classname:"device"
    SETG deviceclassid:(classid)
    CC "Modeling" GET_ACT_MODEL
    #copia tutti oggetti classe Feature (Feature model)
    CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(modelid) classname:"Feature"
    SETL allobjs:(objids)
    CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(modelid) classname:"Device"
    SETL deviceids:(objids)
    SETL sysobjs:(tokdiff(allobjs, deviceids, " ")) #va a creare due spazi di fila però
    #CC "AdoScript" INFOBOX (sysobjs)
    
    FOR featureid in:(sysobjs) {    #mette sistemi nella mappa
        CC "Core" GET_ATTR_VAL objid:(VAL featureid) attrname:("Name")
        SETL name:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL featureid) attrname:("Description")
        SETL description:(val)
        IF
        SETL featureobjs[featureid]:({
            "Name": name,
            "Description": description
        })
    }           
    FOR deviceid in:(deviceids) { #mette device nella mappa
        CC "Core" GET_ATTR_VAL objid:(VAL deviceid) attrname:("Name")
        SETL name:(val)
        CC "Core" GET_ATTR_VAL objid:(VAL deviceid) attrname:("Description")
        SETL description:(val)
        IF
        SETL deviceobjs[deviceid]:({
            "Name": name,
            "Description": description
        })
    }
    #CC "AdoScript" INFOBOX (allobjs + " e device: " + deviceids)
    CC "Modeling" OPEN modelids:(a_dstmodelid)
    #genera gli oggetti system nel nuovo modello IoT Scenario
    
    FOR systemid in:(mapKeysList(featureobjs)) sep:("~") {  #crea i sistemi
        SETL system:(featureobjs[systemid])
        CC "Core" CREATE_OBJ modelid:(a_dstmodelid) classid:(systemclassid) objname:(system["Name"])
        CC "Core" SET_ATTR_VAL objid:(objid) attrname:"name" val:(system["Name"])
        CC "Core" SET_ATTR_VAL objid:(objid) attrname:"description" val:(system["Description"])
        CC "Modeling" SET_OBJ_POS objid:(objid) x:(x) y:(y)
        NEXT_POSITION
    }
    SET x:2cm
    SET y:(y + 6cm)
    FOR deviceid in:(mapKeysList(deviceobjs)) sep:("~") {  #crea i device
        SETL device:(deviceobjs[deviceid])
        CC "Core" CREATE_OBJ modelid:(a_dstmodelid) classid:(deviceclassid) objname:(device["Name"])
        CC "Core" SET_ATTR_VAL objid:(objid) attrname:"name" val:(device["Name"])
        CC "Core" SET_ATTR_VAL objid:(objid) attrname:"description" val:(device["Description"])
        CC "Modeling" SET_OBJ_POS objid:(objid) x:(x) y:(y)
        NEXT_POSITION
    }
}

PROCEDURE global GENERATE_DEVICES_FIRST_VIEW {

}

PROCEDURE global GENERATE_OPERATIONS {

}

PROCEDURE global GENERATE_EVENTS {

}