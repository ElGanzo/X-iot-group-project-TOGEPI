PROCEDURE global PSM_SELECT_TYPE
    objID:integer # The object's id
    modelID:integer # The PIM model's id
{
    ## 1.
    # Choose the node type from available ones
    CC "Core" GET_ATTR_VAL objid:(objID) attrname:("available_types") as-string
    CC "AdoScript" LISTBOX entries:(val) toksep:"~" title:"Choose the node type"
    IF (endbutton != "ok") {
        EXIT
    }
    SET type:(selection)

    ## 2.
    # Get specifications
    CC "Core" GET_ATTR_VAL objid:(modelID) attrname:("Model Type")
    IF (val != "PSM") {
        CC "AdoScript" WARNINGBOX ("Select a PSM model to proceed.") ok
        EXIT
    }
    SET convJson:("")
    CC "Core" GET_ATTR_VAL objid:(modelID) attrname:("Platform")
    GET_SPECIFICATIONS platform:(val) specs:convJson

    ## 3.
    # Add PSM attributes to object
    CC "Core" GET_CLASS_ID objid:(objID)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" SET_ATTR_VAL objid:(objID) attrname:"psm_type" val:(type)
    IF (type(convJson[classname]) = "undefined") {
        EXIT
    }
    SET class:(convJson[classname][0][type])
    CC "Core" GET_ATTR_ID classid:(classid) attrname:("specification")

    IF (attrid != -1 AND type(class["specs"]) = "map") {
        SET attrs:(mapKeysArray(class["specs"]))
        CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objID) attrid:(attrid)
        FOR r in:(rowids) {
            CC "Core" REMOVE_REC_ROW objid:(objID) attrid:(attrid) rowid:(VAL r)
        }
        FOR j from:0 to:(attrs.length-1) {
            # Add attribute to specification table
            SET attrClass:(class["specs"][attrs[j]])
            CC "Core" ADD_REC_ROW objid:(objID) attrid:(attrid)
            CC "Core" SET_ATTR_VAL objid:(rowid) attrname:"Attribute" val:(attrs[j])
            IF (type(attrClass) = "map") {
                CC "Core" SET_ATTR_VAL objid:(rowid) attrname:"Type" val:(attrClass["type"])
                CC "Core" SET_ATTR_VAL objid:(rowid) attrname:"Description" val:(attrClass["description"])
            }
            IF ((ecode)!=0) {
                CC "AdoScript" ERRORBOX ("Error adding a row to attribute \""+(attrs[j])+"\"")
                EXIT
            }
        }
    }
    # Get all outcoming connectors
    IF (type(class["config"]) != "undefined") {
        CC "Core" GET_CONNECTORS objid:(objID) out
        FOR connector in:(objids) {
            # Add connector types
            SET types:(lam_toList(class["output"], "~"))
            CC "Core" SET_ATTR_VAL objid:(VAL connector) attrname:"available_types" val:(types)
        }
    }
}


PROCEDURE global ELEMENT_PSM
    platform:string # The platform name
    objID:integer # The id of the element
{
    SET specs:("")
    GET_SPECIFICATIONS platform:(platform) specs:specs
    SET_SPECIFICATIONS specs:(specs) objID:(STR objID)
}


PROCEDURE global CONNECTOR_PSM
    platform:string # The platform name
    objID:integer # The id of the connector
    fromID:integer # The id of the incoming element
{
    SET specs:("")
    GET_SPECIFICATIONS platform:(platform) specs:specs

    CC "Core" GET_CLASS_ID objid:(fromID)
    CC "Core" GET_CLASS_NAME classid:(classid)
    SET fromClass:(specs[classname])
    SET types:("")

    IF (type(fromClass) = "map") {
        # Add connector types
        SET types:(lam_toList(fromClass["output"], "~"))
    } ELSIF (type(fromClass) = "array") {
        CC "Core" GET_ATTR_VAL objid:(fromID) attrname:"psm_type"
        IF (val != "") {
            SET types:(lam_toList(fromClass[0][val]["output"], "~"))
        }
    }
    CC "Core" SET_ATTR_VAL objid:(objID) attrname:"available_types" val:(types)
}


PROCEDURE global CLASS_PSM
    specs:map # The platform specifications
    objID:integer # The id of the element
    class:reference # The related class
{
    CC "Core" GET_CLASS_ID objid:(objID)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_ATTR_VAL objid:(objID) attrname:("psm_type")
    SET psm_type:(val)
    SET class:(map())
    IF (type(specs[classname]) = "map") {
        SET class:(specs[classname])
    } ELSIF (type(specs[classname]) = "array" AND psm_type != "") {
        SET class:(specs[classname][0][psm_type])
    }
}