API_CALLS

PROCEDURE global API_CALLS
{
	# todo decommentare le due editfield
	#CC "AdoScript" EDITFIELD title:"Azure's Application URL" caption:"Enter Azure's Application URL:" text:"myazureapplication"
    #IF (ecode != 0) {
    #    EXIT
    #}
    SET applicationURL: ("provabasic") #(text) todo sostituire con editfield

# TAKE DEVICES LIST
	
	# GET API TOKEN
	SETL authorization: (map())
	#CC "AdoScript" EDITFIELD title:"Azure's API token" caption:"API token (find it at 'Permissions>API tokens'):" text:"API token"
    #IF (ecode != 0) {
    #    EXIT
    #}
	# todo sostituire con editfield
    SET apiToken:("SharedAccessSignature sr=b5530ab1-61a7-4382-92e9-53ad2e581c29&sig=f5WUrJRJs86GLiboDkXwq2wH8dR7IH6ha6EhpTAFj2M%3D&skn=hghhhh&se=1702234152175") #(text)
	SETL authorization["Authorization"]: (apiToken)

	# Read JSON file
    CC "AdoScript" FREAD file:("db:\\azure.json")
    IF (ecode != 0) {
        CC "AdoScript" ERRORBOX ("The file is not readable!") ok
        EXIT
    }

    # Convert file content to JSON
    SETL specs:(fromJson(text))

	# Get JSON structure from "Azure.json>widget>line_chart>config"
	CC "Modeling" GET_ACT_MODEL
	CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(modelid) classname:("widget")
	SETL widgetID:(0)
	FOR widget in:(objids) {
		SETL widgetID:(VAL widget)
 		BREAK
	}

	# TODO: sostituire con 	#CLASS_PSM specs:(specs) objID:(VAL widgetID) class:prova # e capire perche non funzionava prima
	CC "Core" GET_CLASS_ID objid:(widgetID)
    CC "Core" GET_CLASS_NAME classid:(classid)
    CC "Core" GET_ATTR_VAL objid:(widgetID) attrname:("psm_type")
    SET psm_type:(val)
    SET class:(map())
    IF (type(specs[classname]) = "map") {
        SET class:(specs[classname])
    } ELSIF (type(specs[classname]) = "array" AND psm_type != "") {
        SET class:(specs[classname][0][psm_type])
    }

	# extract from "Azure.json" the default json structure
	SETL myConfig:(class["config"])
	SETL myConfig["displayName"]:("<NomePrimoSystem>") # todo estrarre: qual'è il main? o risaliamo in cima il più possibile o?

	# per il primo oggetto posso semplicemente aggiornare tiles
	SETL myTiles:(myConfig["tiles"])

	SETL tiles:({})

	# fill
	FILL_TILES_ARRAY modelid:modelid tiles:tiles myTiles:myTiles

	# paste
	SETL myTiles:(tiles)

	SETL myConfig["tiles"]:(myTiles)

	CC "AdoScript" INFOBOX ("dashboard updated: "+STR myConfig) # todo eliminare

	CC "AdoScript" EDITFIELD title:"Dashboard id" caption:"Enter dashboard id:" text:"mydashboard"
    IF (ecode != 0) {
        EXIT
    }

	# and send the updated dashboard by API REST PUT call
	HTTP_SEND_REQUEST("http://"+applicationURL+".azureiotcentral.com/api/dashboards/"+dashboardId+"?api-version=2022-10-31-preview") str_method:("PUT") map_reqheaders:(map()) str_reqbody:(myConfig) val_respcode:respstat map_respheaders:respheaders str_respbody:respbody
} 



PROCEDURE global FILL_TILES_ARRAY
modelid:reference
tiles:reference
myTiles:reference
{
	# 1. for each widget create a line_chart or lkv
	CC "Core" GET_ALL_OBJS_OF_CLASSNAME modelid:(modelid) classname:"widget"

	SETL widgetOnDashboard:(myTiles[0]) # tiles' element
	SETL documentationWidget:(myTiles[1]) # last element of tiles

	# abscissa and ordered
	SETL x:0
	SETL y:0

	FOR widget in:(objids) {

		CC "Core" GET_ATTR_VAL objid:(VAL widget) attrname:"name"
		SETL widgetName:(replall(val, " ", ""))

		# from the Widget, get back to the Device through the Attribute
		CC "Core" GET_CONNECTORS objid:(widget) in
		SETL connid:(token(objids, 0, " "))
		CC "Core" GET_CONNECTOR_ENDPOINTS objid:(connid) 
		SETL attribute:(fromobjid)
		CC "Core" GET_ATTR_VAL objid:(VAL device) attrname:"name"
		SETL attributeName:(replall(val, " ", ""))

		CC "Core" GET_CONNECTORS objid:(attribute) in
		SETL connid:(token(objids, 0, " "))
		CC "Core" GET_CONNECTOR_ENDPOINTS objid:(connid)
		SETL device:(fromobjid)
		CC "Core" GET_ATTR_VAL objid:(VAL device) attrname:"name"
		SETL deviceName:(replall(val, " ", ""))

		SETL widgetOnDashboard["displayName"]:(deviceName +" - "+widgetName)

		SETL configuration:(widgetOnDashboard["configuration"])

		SETL capabilityContainer:({})
		SETL capabilityObject:(map)
		SETL capabilityObject["capability"]:(attributeName)
		SETL capabilityObject["aggregateFunction"]: ("avg")

		SETL configuration["capabilities"]:(capabilityContainer)
		

		SETL configuration["group"]:("<DeviceGroupID - GOT FROM EDITBOX (in Azure is in Device group>Url bar)") # todo estrarre (possibilmente dal device)

		SETL deviceArray:({deviceName})
		SETL configuration["devices"]:(deviceArray)

		# try to insert the widgets in order: in this way it's vertical order
		SETL x:(x+2)
		SETL y:(y+2)

		SETL returnParameter:(aappend(tiles, widgetOnDashboard))
	}
}